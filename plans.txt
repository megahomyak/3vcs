Repository versions are stored in a tree

Each element in the tree can have its children, with names to identify them. That is, any versioned repo is like this:

let root = Layer {
    contents: ...,
    children: {
        "somename": Layer { ... },
        "somename2": Layer { ... },
    },
};

And any revisioning work being done is really kind of like messing around with regular files on the filesystem, just with extreme nesting for sequences (like, a chain of sequential `git commit`s will produce an implicit tree of commits, but here it's just gonna be very explicit, and the actual unique identifier of the "commit" (layer) will be the entire path from the very first commit)

So, essentially, this thing will be a filesystem for your filesystem, just without directories (with "files" being able to contain children, it's like a separate container - one is reserved for layer data, one is reserved for all children layers, as shown in a fake code excerpt above)
